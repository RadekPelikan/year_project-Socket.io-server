{
    _events: [Object: null prototype] {
      'tool-pencil': [Function: pencilBack],
      'tool-bucket': [Function: bucketBack],
      disconnect: [Function (anonymous)]
    },
    _eventsCount: 3,
    _maxListeners: undefined,
    nsp: <ref *2> Namespace {
      _events: [Object: null prototype] { connection: [Function (anonymous)] },
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(2) {
        'MD54wN7JENu4iwunAAAC' => [Socket],
        'cepSLT0ZK9YKR81rAAAF' => [Circular *1]
      },
      _fns: [],
      _ids: 0,
      server: Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map(0) {},
        _path: '/socket.io',
        clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,   
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: Encoder {},
        _adapter: [class Adapter extends EventEmitter],
        sockets: [Circular *2],
        opts: [Object],
        eio: [Server],
        httpServer: [Server],
        engine: [Server],
        [Symbol(kCapture)]: false
      },
      name: '/',
      adapter: Adapter {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        nsp: [Circular *2],
        rooms: [Map],
        sids: [Map],
        encoder: Encoder {},
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    },
    client: Client {
      sockets: Map(1) { 'cepSLT0ZK9YKR81rAAAF' => [Circular *1] },
      nsps: Map(1) { '/' => [Circular *1] },
      server: Server {
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        _nsps: [Map],
        parentNsps: Map(0) {},
        _path: '/socket.io',
        clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,   
        _connectTimeout: 45000,
        _serveClient: true,
        _parser: [Object],
        encoder: Encoder {},
        _adapter: [class Adapter extends EventEmitter],
        sockets: [Namespace],
        opts: [Object],
        eio: [Server],
        httpServer: [Server],
        engine: [Server],
        [Symbol(kCapture)]: false
      },
      conn: Socket {
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        id: 'ggDWF79ptZ07f-51AAAE',
        server: [Server],
        upgrading: false,
        upgraded: true,
        _readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        protocol: 4,
        remoteAddress: '::ffff:127.0.0.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer: Timeout {
          _idleTimeout: 45000,
          _idlePrev: [TimersList],
          _idleNext: [Timeout],
          _idleStart: 40177,
          _onTimeout: [Function (anonymous)],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 241,
          [Symbol(triggerId)]: 193
        },
        pingIntervalTimer: Timeout {
          _idleTimeout: 25000,
          _idlePrev: [TimersList],
          _idleNext: [Timeout],
          _idleStart: 34264,
          _onTimeout: [Function (anonymous)],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: true,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 238,
          [Symbol(triggerId)]: 193
        },
        transport: [WebSocket],
        [Symbol(kCapture)]: false
      },
      encoder: Encoder {},
      decoder: Decoder { _callbacks: [Object] },
      id: 'ggDWF79ptZ07f-51AAAE',
      onclose: [Function: bound onclose],
      ondata: [Function: bound ondata],
      onerror: [Function: bound onerror],
      ondecoded: [Function: bound ondecoded],
      connectTimeout: undefined
    },
    data: {},
    connected: true,
    acks: Map(0) {},
    fns: [],
    flags: {},
    server: <ref *3> Server {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      _nsps: Map(1) { '/' => [Namespace] },
      parentNsps: Map(0) {},
      _path: '/socket.io',
      clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?(\.min)?\.js(\.map)?(?:\?|$)/,     
      _connectTimeout: 45000,
      _serveClient: true,
      _parser: {
        protocol: 5,
        PacketType: [Object],
        Encoder: [class Encoder],
        Decoder: [class Decoder extends Emitter]
      },
      encoder: Encoder {},
      _adapter: [class Adapter extends EventEmitter],
      sockets: <ref *2> Namespace {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: [Map],
        _fns: [],
        _ids: 0,
        server: [Circular *3],
        name: '/',
        adapter: [Adapter],
        [Symbol(kCapture)]: false
      },
      opts: { cors: [Object] },
      eio: Server {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        clients: [Object],
        clientsCount: 2,
        opts: [Object],
        corsMiddleware: [Function: corsMiddleware],
        ws: [WebSocketServer],
        [Symbol(kCapture)]: false
      },
      httpServer: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        maxRequestsPerSocket: 0,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Function: IncomingMessage],
        [Symbol(ServerResponse)]: [Function: ServerResponse],
        [Symbol(kCapture)]: false,
        [Symbol(async_id_symbol)]: 6
      },
      engine: Server {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        clients: [Object],
        clientsCount: 2,
        opts: [Object],
        corsMiddleware: [Function: corsMiddleware],
        ws: [WebSocketServer],
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false
    },
    adapter: <ref *4> Adapter {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      nsp: <ref *2> Namespace {
        _events: [Object: null prototype],
        _eventsCount: 1,
        _maxListeners: undefined,
        sockets: [Map],
        _fns: [],
        _ids: 0,
        server: [Server],
        name: '/',
        adapter: [Circular *4],
        [Symbol(kCapture)]: false
      },
      rooms: Map(2) {
        'MD54wN7JENu4iwunAAAC' => [Set],
        'cepSLT0ZK9YKR81rAAAF' => [Set]
      },
      sids: Map(2) {
        'MD54wN7JENu4iwunAAAC' => [Set],
        'cepSLT0ZK9YKR81rAAAF' => [Set]
      },
      encoder: Encoder {},
      [Symbol(kCapture)]: false
    },
    id: 'cepSLT0ZK9YKR81rAAAF',
    handshake: {
      headers: {
        host: '127.0.0.1:3000',
        connection: 'keep-alive',
        'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"',
        accept: '*/*',
        'sec-ch-ua-mobile': '?0',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36',
        'sec-ch-ua-platform': '"Windows"',
        origin: 'http://127.0.0.1:5500',
        'sec-fetch-site': 'same-site',
        'sec-fetch-mode': 'cors',
        'sec-fetch-dest': 'empty',
        referer: 'http://127.0.0.1:5500/',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-US,en;q=0.9'
      },
      time: 'Wed Dec 15 2021 09:21:43 GMT+0100 (Central European Standard Time)',
      address: '::ffff:127.0.0.1',
      xdomain: true,
      secure: false,
      issued: 1639556503680,
      url: '/socket.io/?EIO=4&transport=polling&t=NszBjXh',
      query: [Object: null prototype] {
        EIO: '4',
        transport: 'polling',
        t: 'NszBjXh'
      },
      auth: {}
    },
    [Symbol(kCapture)]: false
  }